// <auto-generated />
using System;
using InfoClients.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InfoClients.Domain.Migrations
{
    [DbContext(typeof(InfoClientsContext))]
    [Migration("20191021015030_Initial_Database")]
    partial class Initial_Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("infoclients")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InfoClients.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CountryId");

                    b.Property<string>("NameCity");

                    b.Property<Guid>("StateId");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("InfoClients.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("AvailableCredit");

                    b.Property<Guid>("CityId");

                    b.Property<Guid>("CountryId");

                    b.Property<int>("CreditLimit");

                    b.Property<string>("FullName");

                    b.Property<string>("Nit");

                    b.Property<string>("Phone");

                    b.Property<Guid>("StateId");

                    b.Property<double>("VisitsPercentage");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("InfoClients.Domain.Entities.ClientVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ClientId");

                    b.Property<string>("Description");

                    b.Property<int>("Net");

                    b.Property<int>("SaleRepresentativeId");

                    b.Property<DateTime>("VisitDate");

                    b.Property<int>("VisitTotal");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SaleRepresentativeId");

                    b.ToTable("ClientVisit");
                });

            modelBuilder.Entity("InfoClients.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NameCountry");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("InfoClients.Domain.Entities.SalesRepresentative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SalesRepresentative");
                });

            modelBuilder.Entity("InfoClients.Domain.Entities.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CountryId");

                    b.Property<string>("NameState");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("InfoClients.Domain.Entities.Client", b =>
                {
                    b.HasOne("InfoClients.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InfoClients.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InfoClients.Domain.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InfoClients.Domain.Entities.ClientVisit", b =>
                {
                    b.HasOne("InfoClients.Domain.Entities.Client", "Client")
                        .WithMany("ClientVisit")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InfoClients.Domain.Entities.SalesRepresentative", "SaleRepresentative")
                        .WithMany()
                        .HasForeignKey("SaleRepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
